{"version":3,"file":"index.modern.js","sources":["../src/daisy-date-reader.tsx"],"sourcesContent":["import React, { useState } from 'react'\n\nimport { DayPicker } from 'react-day-picker'\nimport 'react-day-picker/dist/style.css'\n\ntype DateReaderProps = {\n  date: Date\n  setDate: (date: Date) => void\n  disabled?: boolean\n  className?: string\n}\n\nexport function DaisyDateReader({\n  date: fecha,\n  setDate: setFecha,\n  disabled = false,\n  className = ''\n}: DateReaderProps) {\n  const [calendar, setCalendar] = useState(false)\n  const [date, setDate] = useState<Date | undefined>(fecha)\n\n  const configDate = (date: Date | undefined) => {\n    setDate(date)\n    if (!date) date = new Date()\n    setFecha(date)\n  }\n\n  const toggleDate = () => {\n    setCalendar(!calendar)\n  }\n  let footer = ''\n  try {\n    footer = date ? date.toLocaleDateString() : 'Select a date'\n  } catch (error) {\n    console.log({ error })\n  }\n\n  return (\n    <div className={className}>\n      <button\n        onClick={toggleDate}\n        type='button'\n        className='btn btn-sm'\n        disabled={disabled}\n      >\n        {footer}\n      </button>\n      <div\n        className={` absolute opacity-100 bg-base-300 z-50 p-2 ${\n          calendar ? 'block' : 'hidden'\n        }`}\n      >\n        <DayPicker\n          mode='single'\n          selected={date}\n          onSelect={(value: any) => {\n            configDate(value)\n            setCalendar(false)\n          }}\n        />\n        <div className='mb-2 flex justify-between mt-1'>\n          <button\n            type='button'\n            onClick={() => configDate(new Date())}\n            className='btn btn-xs mr-1'\n          >\n            Today\n          </button>\n          <button onClick={() => setCalendar(false)} className='btn btn-xs'>\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":["DaisyDateReader","_ref","fecha","date","setFecha","setDate","_ref$disabled","disabled","_ref$className","className","_useState","useState","calendar","setCalendar","_useState2","configDate","Date","toggleDate","footer","toLocaleDateString","error","console","log","React","onClick","type","DayPicker","mode","selected","onSelect","value"],"mappings":";;;;SAYgBA,eAAeA,CAAAC,IAAA;MACvBC,KAAK,GAAAD,IAAA,CAAXE,IAAI;IACKC,QAAQ,GAAAH,IAAA,CAAjBI,OAAO;IAAAC,aAAA,GAAAL,IAAA,CACPM,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAG,KAAK,GAAAA,aAAA;IAAAE,cAAA,GAAAP,IAAA,CAChBQ,SAAS;IAATA,SAAS,GAAAD,cAAA,cAAG,EAAE,GAAAA,cAAA;EAEd,IAAAE,SAAA,GAAgCC,QAAQ,CAAC,KAAK,CAAC;IAAxCC,QAAQ,GAAAF,SAAA;IAAEG,WAAW,GAAAH,SAAA;EAC5B,IAAAI,UAAA,GAAwBH,QAAQ,CAAmBT,KAAK,CAAC;IAAlDC,IAAI,GAAAW,UAAA;IAAET,OAAO,GAAAS,UAAA;EAEpB,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAIZ,IAAsB;IACxCE,OAAO,CAACF,IAAI,CAAC;IACb,IAAI,CAACA,IAAI,EAAEA,IAAI,GAAG,IAAIa,IAAI,EAAE;IAC5BZ,QAAQ,CAACD,IAAI,CAAC;GACf;EAED,IAAMc,UAAU,GAAG,SAAbA,UAAUA;IACdJ,WAAW,CAAC,CAACD,QAAQ,CAAC;GACvB;EACD,IAAIM,MAAM,GAAG,EAAE;EACf,IAAI;IACFA,MAAM,GAAGf,IAAI,GAAGA,IAAI,CAACgB,kBAAkB,EAAE,GAAG,eAAe;GAC5D,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC;MAAEF,KAAK,EAALA;KAAO,CAAC;;EAGxB,OACEG;IAAKd,SAAS,EAAEA;KACdc;IACEC,OAAO,EAAEP,UAAU;IACnBQ,IAAI,EAAC,QAAQ;IACbhB,SAAS,EAAC,YAAY;IACtBF,QAAQ,EAAEA;KAETW,MAAM,CACA,EACTK;IACEd,SAAS,mDACPG,QAAQ,GAAG,OAAO,GAAG,QACvB;KAEAW,oBAACG,SAAS;IACRC,IAAI,EAAC,QAAQ;IACbC,QAAQ,EAAEzB,IAAI;IACd0B,QAAQ,EAAE,SAAVA,QAAQA,CAAGC,KAAU;MACnBf,UAAU,CAACe,KAAK,CAAC;MACjBjB,WAAW,CAAC,KAAK,CAAC;;IAEpB,EACFU;IAAKd,SAAS,EAAC;KACbc;IACEE,IAAI,EAAC,QAAQ;IACbD,OAAO,EAAE,SAATA,OAAOA;MAAA,OAAQT,UAAU,CAAC,IAAIC,IAAI,EAAE,CAAC;;IACrCP,SAAS,EAAC;aAGH,EACTc;IAAQC,OAAO,EAAE,SAATA,OAAOA;MAAA,OAAQX,WAAW,CAAC,KAAK,CAAC;;IAAEJ,SAAS,EAAC;aAE5C,CACL,CACF,CACF;AAEV;;;;"}